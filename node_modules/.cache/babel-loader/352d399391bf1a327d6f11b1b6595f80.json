{"ast":null,"code":"var _jsxFileName = \"/Users/habsa2war/interap/java/project/unit2 version/bank-client/src/component/Login.js\";\nimport React, { useState, Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.changeHandler = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.submitHandler = e => {\n      e.preventDefault();\n      console.log(this.state);\n      var myHeaders = new Headers();\n      myHeaders.append(\"Content-Type\", \"application/json\");\n      var raw = JSON.stringify({\n        \"email\": this.state.username,\n        \"password\": this.state.password\n      });\n      var requestOptions = {\n        method: 'POST',\n        headers: myHeaders,\n        body: raw,\n        redirect: 'follow'\n      };\n      fetch(\"http://localhost:9092/auth/users/login\", requestOptions).then(response => response.text()).then(result => {\n        this.props.history.push('/dashboard');\n        localStorage.setItem(\"token\", result.jwt);\n        console.log(\"token\", result.token);\n\n        if (result.ok) {\n          return result.json().then(result => {\n            console.log(\"result ok\", result.jwt);\n            localStorage.setItem('login', JSON.stringify({\n              login: true,\n              token: result.jwt\n            }));\n          });\n        }\n      }).catch(error => console.log('error', error));\n    };\n\n    this.state = {\n      username: '',\n      password: ''\n    };\n  }\n\n  render() {\n    const {\n      username,\n      password\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Login\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"username\",\n            value: username,\n            onChange: this.changeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"password\",\n            value: password,\n            onChange: this.changeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/Users/habsa2war/interap/java/project/unit2 version/bank-client/src/component/Login.js"],"names":["React","useState","Component","Login","constructor","props","changeHandler","e","setState","target","name","value","submitHandler","preventDefault","console","log","state","myHeaders","Headers","append","raw","JSON","stringify","username","password","requestOptions","method","headers","body","redirect","fetch","then","response","text","result","history","push","localStorage","setItem","jwt","token","ok","json","login","catch","error","render"],"mappings":"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","sourcesContent":["import React, { useState, Component } from 'react';\n\nclass Login extends Component {\n  constructor(props) {\n      super(props)\n\n      this.state ={\n          username:'',\n          password:''\n      }\n  }\n  changeHandler= e =>{\n      this.setState({ [e.target.name]: e.target.value})\n  }\n  submitHandler= e =>{\n      e.preventDefault()\n      console.log(this.state);\n      \n      var myHeaders = new Headers();\nmyHeaders.append(\"Content-Type\", \"application/json\");\n\nvar raw = JSON.stringify({\n\"email\": this.state.username,\n\"password\": this.state.password\n});\n\nvar requestOptions = {\nmethod: 'POST',\nheaders: myHeaders,\nbody: raw,\nredirect: 'follow'\n};\n\nfetch(\"http://localhost:9092/auth/users/login\", requestOptions)\n.then(response => response.text())\n.then(result => {\n  this.props.history.push('/dashboard')\n  localStorage.setItem(\"token\",result.jwt)\n  console.log(\"token\",result.token)\n  if (result.ok){\n    return result.json().then((result) =>{\n      console.log(\"result ok\", result.jwt)\n      localStorage.setItem('login', JSON.stringify({\n        login:true,\n        token:result.jwt\n      }));\n      \n    })\n  }})\n.catch(error => console.log('error', error));\n}\n  \n  render() { \n      const { username, password } = this.state\n  return (\n    <div>\n      Login<br /><br />\n     \n      <form onSubmit={ this.submitHandler }>\n  <label>\n    Name:\n    <input type=\"text\" name=\"username\" value = { username } onChange={ this.changeHandler} />\n  </label>\n  <label>\n    password:\n    <input type=\"text\" name=\"password\" value = { password }  onChange={ this.changeHandler}/>\n  </label>\n  <input type=\"submit\" value=\"Submit\" />\n</form>\n    </div>\n  );\n}\n\n}\nexport default Login;"]},"metadata":{},"sourceType":"module"}